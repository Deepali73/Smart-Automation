-----------#FIRST-APPROACH------------------
import pywhatkit as kit

def send_whatsapp_message(phone_number: str, message: str):
    try:
        kit.sendwhatmsg_instantly(phone_number, message)
        print("Message sent successfully!")
    except Exception as e:
        print("An error occurred:", e)

# Example usage
send_whatsapp_message("+91xxxxxxxxxx", "Hello, this message is generated by Python.")







---------------#SECOND-APPROACH------------------
from flask import Flask, request
import pywhatkit as kit

app = Flask(__name__)
messages_db = []

# View all messages sent
@app.route("/whatsapp/messages", methods=["GET"])
def get_all_messages():
    return {"sent_messages": messages_db}

# Send a new WhatsApp message
@app.route("/whatsapp/send", methods=["POST"])
def send_whatsapp():
    try:
        phone = request.form['phone']
        msg = request.form['message']

        # Store to local DB (in-memory list)
        messages_db.append({"phone": phone, "message": msg})

        # Send message via WhatsApp instantly
        kit.sendwhatmsg_instantly(phone, msg)

        return f"‚úÖ Message sent to {phone} with content: '{msg}'"
    except Exception as e:
        return f"‚ùå Error occurred: {str(e)}"

# Run the Flask server
if __name__ == "__main__":
    app.run(debug=True)










------------------#THIRD-APPROACH----------------------
from flask import Flask, request, jsonify
import pywhatkit as kit

app = Flask(__name__)
messages_db = []

# ========================= API ROUTES =========================

# üì• GET: View all sent messages
@app.route("/whatsapp/messages", methods=["GET"])
def get_all_messages():
    return jsonify({"sent_messages": messages_db})


# üì§ POST: Send a WhatsApp message
@app.route("/whatsapp/send", methods=["POST"])
def send_whatsapp():
    try:
        # Get phone and message from form data or JSON
        phone = request.form.get('phone') or request.json.get('phone')
        message = request.form.get('message') or request.json.get('message')

        if not phone or not message:
            return jsonify({"error": "Both 'phone' and 'message' are required."}), 400

        # Save to local in-memory DB
        messages_db.append({"phone": phone, "message": message})

        # Send message instantly via WhatsApp
        kit.sendwhatmsg_instantly(phone_no=phone, message=message)

        return jsonify({"status": "‚úÖ Message sent", "phone": phone, "message": message})
    
    except Exception as e:
        return jsonify({"error": str(e)}), 500

# ========================= MAIN =========================
if __name__ == "__main__":
    app.run(debug=True)

